{"version":3,"sources":["../src/app.js"],"names":["API_PORT","STATUS","HOST","PRIVATE_KEY_FILE","CERTIFICATE_FILE","config","parsed","app","undefined","use","whitelist","corsOptions","origin","callback","indexOf","console","log","Error","json","urlencoded","extended","createServer","key","readFileSync","cert","listen"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,MAAM,EAAEA,WAAW,IAAb,EAAmBC,MAAnB,EAA2BC,OAAO,SAAlC,EAA6CC,gBAA7C,EAA+DC,gBAA/D,KAAoF,iBAAOC,MAAP,GAAgBC,MAA1G;;AAGA;;;AAXA;AAVA;AAsBA,MAAMC,MAAM,wBAAZ;;AAEA;AACA,IAAIN,WAAWO,SAAf,EAA0B;AACxBD,MAAIE,GAAJ,CAAQ,sBAAOR,MAAP,CAAR;AACD;AACDM,IAAIE,GAAJ,CAAQ,4BAAR;;AAEA,MAAMC,YAAY,CAChB,6BADgB,EAEhB,6BAFgB,EAGhB,4BAHgB,EAIhB,0BAJgB,EAKhB,uBALgB,EAMhB,8BANgB,EAOhB,0BAPgB,EAQhB,6BARgB,EAShB,4BATgB,EAUhB,uBAVgB,CAAlB;;AAaA,MAAMC,cAAc;AAClBC,UAAQ,CAACA,MAAD,EAASC,QAAT,KAAsB;AAC5B,QAAIH,UAAUI,OAAV,CAAkBF,MAAlB,MAA8B,CAAC,CAAnC,EAAsC;AACpCC,eAAS,IAAT,EAAe,IAAf;AACD,KAFD,MAEO;AACLE,cAAQC,GAAR,CAAYJ,MAAZ;AACAC,eAAS,IAAII,KAAJ,CAAU,qBAAV,CAAT;AACD;AACF;AARiB,CAApB;;AAWAV,IAAIE,GAAJ,CAAQ,oBAAKE,WAAL,CAAR;;AAEAJ,IAAIE,GAAJ,CAAQ,qBAAWS,IAAX,EAAR;AACAX,IAAIE,GAAJ,CAAQ,qBAAWU,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACAb,IAAIE,GAAJ,CAAQ,YAAR;AACAF,IAAIE,GAAJ,CAAQ,iBAAR;AACAF,IAAIE,GAAJ,CAAQ,gBAAR;AACAF,IAAIE,GAAJ,CAAQ,cAAR;AACAF,IAAIE,GAAJ,CAAQ,WAAR;;AAEA,gBAAMY,YAAN,CAAmB;AACjBC,OAAK,aAAGC,YAAH,CAAgBpB,gBAAhB,CADY;AAEjBqB,QAAM,aAAGD,YAAH,CAAgBnB,gBAAhB;AAFW,CAAnB,EAGGG,GAHH,EAGQkB,MAHR,CAGezB,QAHf,EAGyBE,IAHzB,EAG+B,MAAM;AACnCa,UAAQC,GAAR,CAAa,gCAA+Bd,IAAK,IAAGF,QAAS,GAA7D;AACD,CALD","file":"app.js","sourcesContent":["// Import Dependencies\nimport express from 'express';\nimport logger from 'morgan';\nimport dotenv from 'dotenv';\nimport cors from 'cors';\nimport BodyParser from 'body-parser';\nimport fs from 'fs';\nimport https from 'https';\nimport compression from 'compression';\n\n// Import Routes\nimport users from './routes/users';\nimport nonprofits from './routes/nonprofits';\nimport campaigns from './routes/campaigns';\nimport advisor from './routes/advisor';\nimport help from './routes/help';\n\n// Grabbing Environment Variables\nconst { API_PORT = 3000, STATUS, HOST = '0.0.0.0', PRIVATE_KEY_FILE, CERTIFICATE_FILE } = dotenv.config().parsed;\n\n\n// Setting up the express application.\nconst app = express();\n\n// Setting the morgan logger to the development status if it exists\nif (STATUS !== undefined) {\n  app.use(logger(STATUS));\n}\napp.use(compression());\n\nconst whitelist = [\n  'https://192.168.86.200:3002',\n  'https://192.168.86.200:3000',\n  'http://192.168.86.200:3002',\n  'https://192.168.1.9:3002',\n  'https://165.227.7.212',\n  'https://www.designbright.org',\n  'https://designbright.org',\n  'https://192.168.33.129:3002',\n  'http://10.239.236.134:3002',\n  'http://localhost:3002',\n];\n\nconst corsOptions = {\n  origin: (origin, callback) => {\n    if (whitelist.indexOf(origin) !== -1) {\n      callback(null, true);\n    } else {\n      console.log(origin);\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n};\n\napp.use(cors(corsOptions));\n\napp.use(BodyParser.json());\napp.use(BodyParser.urlencoded({ extended: false }));\n\n// Setting up the API routes.\napp.use('/api/users', users);\napp.use('/api/nonprofits', nonprofits);\napp.use('/api/campaigns', campaigns);\napp.use('/api/advisor', advisor);\napp.use('/api/help', help);\n\nhttps.createServer({\n  key: fs.readFileSync(PRIVATE_KEY_FILE),\n  cert: fs.readFileSync(CERTIFICATE_FILE),\n}, app).listen(API_PORT, HOST, () => {\n  console.log(`Design Bright API running on ${HOST}:${API_PORT}.`);\n},\n);\n"]}