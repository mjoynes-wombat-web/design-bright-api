{"version":3,"sources":["../../src/routes/nonprofits.js"],"names":["router","post","req","res","body","results","status","json","error","get","accessToken","params","console","log","user","nonprofitId","app_metadata","nonProfitID","dataValues","statusCode","original","patch","id","campaignId","userInfo","launchResults","launchErr","getUserErr","stopResults","stopErr","nonprofit","campaigns"],"mappings":"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","file":"nonprofits.js","sourcesContent":["import { Router } from 'express';\n\nimport { addNonProfit, findNonProfitByID } from '../models/nonprofits';\nimport { getUserInfo } from '../models/Auth0';\nimport { getNonprofitsCampaigns, launchCampaign, stopCampaign } from '../models/campaigns';\nimport jsonResponse from '../helpers/response';\nimport requireAuth from '../helpers/requireAuth';\n\nconst router = Router();\n\nrouter.post('/create', (req, res) => {\n  addNonProfit(req.body,\n    (results) => {\n      res.status(results.status).json(results);\n    },\n    (error) => {\n      res.json(error);\n    },\n  );\n});\n\nrouter.get('/:accessToken', (req, res) => {\n  const accessToken = req.params.accessToken;\n  console.log(requireAuth(accessToken));\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      (user) => {\n        const nonprofitId = user.app_metadata.nonProfitID;\n        findNonProfitByID(\n          nonprofitId,\n          results => (results === null ?\n            jsonResponse(\n              404,\n              { nonprofitId },\n              'This account belongs to a non-profit that doesn\\'t exist. Please contact support.',\n              res)\n            : jsonResponse(\n              200,\n              results.dataValues,\n              `You have successfully retrieved the nonprofit's info that has the id of ${user.app_metadata.nonProfitID}.`,\n              res)\n          ),\n          error => jsonResponse(\n            500,\n            error,\n            'There was an issue retrieving the non-profit information from the database. Please contact support.',\n            res),\n        );\n      },\n      error => jsonResponse(\n        error.statusCode,\n        error.original,\n        'There was an error getting the user info.',\n        res),\n    );\n  } else {\n    jsonResponse(\n      401,\n      { accessToken },\n      'The access token is not a valid access token.',\n      res,\n    );\n  }\n});\n\nrouter.patch('/campaigns/launch/:campaignId', (req, res) => {\n  const id = req.params.campaignId;\n  const accessToken = req.body.accessToken;\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      userInfo => launchCampaign(\n        id,\n        userInfo.nonProfitID,\n        launchResults => (launchResults[0] === 0\n          ? jsonResponse(\n            304,\n            launchResults,\n            'Could not start the campaign. Either it doesn\\'t exists or is already started.',\n            res)\n          : jsonResponse(\n            200,\n            launchResults,\n            'You have successfully started your campaign.',\n            res)),\n        launchErr => jsonResponse(\n          500,\n          launchErr,\n          'There was an server error launching the campiagn.',\n          res),\n      ),\n      getUserErr => jsonResponse(\n        404,\n        getUserErr,\n        'There was an error getting the user info.',\n        res),\n    );\n  } else {\n    jsonResponse(\n      401,\n      { accessToken },\n      'This access token is not authorized.',\n      res,\n    );\n  }\n});\n\nrouter.patch('/campaigns/stop/:campaignId', (req, res) => {\n  const id = req.params.campaignId;\n  const accessToken = req.body.accessToken;\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      userInfo => stopCampaign(\n        id,\n        userInfo.nonProfitID,\n        stopResults => (stopResults[0] === 0\n          ? jsonResponse(\n            304,\n            stopResults,\n            'Could not stop the campaign. Either it doesn\\'t exists, hasn\\'t been started or is already stopped.',\n            res)\n          : jsonResponse(\n            200,\n            stopResults,\n            'You have successfully stopped your campaign.',\n            res)),\n        stopErr => jsonResponse(\n          500,\n          stopErr,\n          'There was an server error stopping the campaign.',\n          res),\n      ),\n      getUserErr => jsonResponse(\n        404,\n        getUserErr,\n        'There was an error getting the user info.',\n        res),\n    );\n  } else {\n    jsonResponse(\n      401,\n      { accessToken },\n      'The access token is not a valid access token.',\n      res,\n    );\n  }\n});\n\nrouter.get('/campaigns/:accessToken', (req, res) => {\n  const accessToken = req.params.accessToken;\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      (user) => {\n        const nonprofitId = user.app_metadata.nonProfitID;\n        findNonProfitByID(\n          nonprofitId,\n          (nonprofit) => {\n            getNonprofitsCampaigns(\n              nonprofitId,\n              campaigns => jsonResponse(\n                200,\n                { nonprofit, campaigns },\n                `The campaigns were successfully retrieved for the nonprofit with the id ${nonprofitId}.`,\n                res,\n              ),\n              error => jsonResponse(\n                404,\n                error,\n                `Could not find campaigns for the nonprofit with the id ${nonprofitId}.`,\n                res,\n              ),\n            );\n          },\n          error => jsonResponse(\n            404,\n            error,\n            `Could not find campaigns for the nonprofit with the id ${nonprofitId}.`,\n            res,\n          ),\n        );\n      },\n      error => jsonResponse(\n        error.statusCode,\n        error.original,\n        'There was an error getting the user info.',\n        res,\n      ),\n    );\n  } else {\n    jsonResponse(\n      401,\n      { accessToken },\n      'The access token is not a valid access token.',\n      res,\n    );\n  }\n});\n\nexport default router;\n"]}